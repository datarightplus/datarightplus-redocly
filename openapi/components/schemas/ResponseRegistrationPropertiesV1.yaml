properties:
  client_id:
    type: string
    example: 35a5a70b-5b8d-41f4-9cbd-96cfbc15c58a
    description: Provider issued OAuth2 Client identifier string
  client_id_issued_at:
    type: integer
    example: 1571808167
    description: Time at which the OAuth2 Client identifier was issued expressed as seconds
      since 1970-01-01T00:00:00Z as measured in UTC
    x-cds-type: ExternalRef
  client_name:
    type: string
    example: Mock Software
    description: Human-readable string name of the Initiator to be presented
      to the end-user during authorization
  client_description:
    type: string
    example: A mock Initiator
    description: Human-readable string name of the Initiator description to
      be presented to the end user during authorization
  client_uri:
    type: string
    example: https://www.mockcompany.com.au
    description: URL string of a web page providing information about the Initiator
    format: uri
    x-cds-type: URIString
  legal_entity_id:
    type: string
    example: 344F0E809-BDBE-4F8E-BD30-5E6C3CB78D7B
    description: A unique identifier string assigned by the Ecosystem Authority that identifies
      the Initiator Entity
  legal_entity_name:
    type: string
    example: Mock Company Pty Ltd.
    description: Human-readable string name of the Initiator Entity
  org_id:
    type: string
    example: 3B0B0A7B-3E7B-4A2C-9497-E357A71D07C8
    description: A unique identifier string assigned by the Ecosystem Authority that identifies the Initiator Brand
  org_name:
    type: string
    example: Mock Company Brand.
    description: Human-readable string name of the Initiator Brand to be presented to the end user during authorization
  redirect_uris:
    type: array
    example:
      - https://www.mockcompany.com.au/redirects/redirect1
      - https://www.mockcompany.com.au/redirects/redirect2
    description: Array of redirection URI strings for use in redirect-based flows.
      If used, redirect_uris MUST match or be a subset of the redirect_uris as defined in the SSA
    items:
      type: string
      format: uri
      x-cds-type: URIString
  sector_identifier_uri:
    type: string
    example: https://www.mockcompany.com.au/sector_identifier.json
    description: URL string referencing the OpenID Connect Dynamic Client Registration sector identifier URI, used as
      an optional input to the Pairwise Identifier
    format: uri
    x-cds-type: URIString
  logo_uri:
    type: string
    example: https://www.mockcompany.com.au/logos/logo1.png
    description: >-
      URL string that references a logo for the Initiator. 
      
      If present, the server **SHOULD** display this image to the User during approval
    format: uri
    x-cds-type: URIString
  tos_uri:
    type: string
    example: https://www.mockcompany.com.au/tos.html
    description: URL string that points to a human-readable terms of service document for the Initiator
    format: uri
    x-cds-type: URIString
  policy_uri:
    type: string
    example: https://www.mockcompany.com.au/policy.html
    description: URL string that points to a human-readable policy document for the Initiator
    format: uri
    x-cds-type: URIString
  jwks_uri:
    type: string
    example: https://www.mockcompany.com.au/jwks
    description: URL string referencing the Initiator JSON Web Key (JWK) Set [RFC7517]
      document used for OAuth2 Client operations
    format: uri
    x-cds-type: URIString
  revocation_uri:
    type: string
    example: https://www.mockcompany.com.au/revocation
    description: URI string that references the location of the Initiator Arrangement Revocation Endpoint
    format: uri
    x-cds-type: URIString
  recipient_base_uri:
    type: string
    example: https://www.mockcompany.com.au
    description: URI string that specifies the base uri for all Initiator endpoints (Initiator Base URI)
    format: uri
    x-cds-type: URIString
  token_endpoint_auth_method:
    type: string
    description: The requested authentication method for the token endpoint
    enum:
      - private_key_jwt
    example: private_key_jwt
    x-cds-type: Enum
  token_endpoint_auth_signing_alg:
    type: string
    description: The algorithm used for signing the JWT
    enum:
      - PS256
      - ES256
    example: PS256
    x-cds-type: Enum
  grant_types:
    type: array
    description: Array of OAuth 2.0 grant type strings that the client can use at
      the token endpoint
    items:
      type: string
      enum:
        - client_credentials
        - authorization_code
        - refresh_token
      x-cds-type: Enum
  response_types:
    type: array
    description: Array of the OAuth 2.0 response type strings that the client can
      use at the authorization endpoint. Response type value `code` is required for
      Authorization Code Flow. Response type value `code id_token` is required for
      OIDC Hybrid Flow.
    items:
      type: string
      enum:
        - code
        - code id_token
      x-cds-type: Enum
  application_type:
    type: string
    description: Kind of the application. The only supported application type will
      be `web`
    enum:
      - web
    x-cds-type: Enum
  id_token_signed_response_alg:
    type: string
    description: Algorithm with which an id_token is to be signed
    enum:
      - PS256
      - ES256
    example: PS256
    x-cds-type: Enum
  id_token_encrypted_response_alg:
    type: string
    example: RSA-OAEP
    description: >-
      JWE `alg` algorithm with which an id_token is to be encrypted.
      Required if OIDC Hybrid Flow (response type `code id_token`) is registered.
    x-cds-type: ExternalRef
  id_token_encrypted_response_enc:
    type: string
    example: A256GCM
    description: >-
      JWE `enc` algorithm with which an id_token is to be encrypted.
      Required if OIDC Hybrid Flow (response type `code id_token`) is registered.
    x-cds-type: ExternalRef
  authorization_signed_response_alg:
    description: >-
      The JWS `alg` algorithm required for signing authorization
      responses. If this is specified, the response will be signed using JWS
      and the configured algorithm. The algorithm "none" is not allowed.
      
      **REQUIRED** if response_type of "code" is registered by the client.
    enum:
      - PS256
      - ES256
    example: PS256
    type: string
    x-cds-type: Enum
    x-conditional: true
  authorization_encrypted_response_alg:
    description: >-
      The JWE `alg` algorithm required for encrypting authorization
      responses. If unspecified, the default is that no encryption is performed.
      
      **REQUIRED** if "authorization_encrypted_response_enc" is included.
    enum:
      - RSA-OAEP
      - RSA-OAEP-256
    example: RSA-OAEP
    type: string
    x-cds-type: Enum
    x-conditional: true
  authorization_encrypted_response_enc:
    description: The JWE `enc` algorithm required for encrypting authorization
      responses. If "authorization_encrypted_response_alg" is specified, the
      default for this value is "A128CBC-HS256".
    enum:
      - A256GCM
      - A128CBC-HS256
    example: A128CBC-HS256
    type: string
    x-cds-type: Enum
  request_object_signing_alg:
    type: string
    description: Request Object signing algorithm expected by the Provider
    enum:
      - PS256
      - ES256
    example: PS256
    x-cds-type: Enum
  software_statement:
    type: string
    format: JWT
    description: The Software Statement Assertion provided by the Ecosystem Authority
    example: "Software Statement Content"
  software_id:
    type: string
    example: 740C368F-ECF9-4D29-A2EA-0514A66B0CDE
    description: String representing a unique identifier assigned by the Ecosystem Authority
      and used by registration endpoints to identify the Initiator to be dynamically
      registered. The `software_id` will remain the same for the lifetime
      of the Initiator, across multiple updates and versions
  software_roles:
    type: string
    description: String containing a role of the software in the context of the Ecosystem Authority. Initially
      the only value used will be `data-recipient-software-product`
    enum:
      - data-recipient-software-product
    x-cds-type: Enum
  scope:
    type: string
    example: openid profile bank:accounts.basic:read bank:accounts.detail:read bank:transactions:read
      bank:payees:read bank:regular_payments:read common:customer.basic:read common:customer.detail:read
      cdr:registration
    description: String containing a space-separated list of scope values that the
      client can use when requesting access tokens.
type: object
required:
  - client_description
  - client_id
  - client_name
  - client_uri
  - grant_types
  - id_token_signed_response_alg
  - jwks_uri
  - logo_uri
  - org_id
  - org_name
  - redirect_uris
  - request_object_signing_alg
  - response_types
  - scope
  - software_id
  - software_statement
  - token_endpoint_auth_method
  - token_endpoint_auth_signing_alg
x-conditional:
  - id_token_encrypted_response_alg
  - id_token_encrypted_response_enc
